name: Build Preview Docker Image
# Docker Images are built on all pushes to preview
on:
  push:
    branches:
      - 'preview'
  # run on repo dispatch webhook
  repository_dispatch:
    types:
      - rebuild-image
  # allow manual trigger
  workflow_dispatch:
  # call directly from other workflows
  workflow_call:
env:
  REGISTRY: ghcr.io
concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true
jobs:
  build:
    name: Build Docker image
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          # The branch, tag or SHA to checkout.
          ref: preview
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          # Push to Github Container Registry
          images: |
            ${{ env.REGISTRY }}/${{ github.repository }}
          # Creates the following tags:
          # - actual-server:sha-90dd603
          # - actual-server:edge
          # - actual-server:preview
          tags: |
            type=sha
            type=edge,branch=preview
            type=raw,value=preview
      - name: Docker meta for Alpine image
        id: alpine-meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ env.REGISTRY }}/${{ github.repository }}
          # Creates the following tags:
          # - actual-server:sha-90dd603-alpine
          # - actual-server:edge-alpine
          # - actual-server:preview-alpine
          tags: |
            type=sha,suffix=-alpine
            type=edge,suffix=-alpine,branch=preview
            type=raw,suffix=-alpine,value=preview
      - name: 'Info: Docker tags'
        run: |
          echo "${{ steps.meta.outputs.tags }}"
          echo "${{ steps.alpine-meta.outputs.tags }}"
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push standard image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          file: Dockerfile
          platforms: |
            linux/amd64
          tags: ${{ steps.meta.outputs.tags }}
      - name: Build and push Alpine image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          file: Dockerfile.alpine
          platforms: |
            linux/amd64
          tags: ${{ steps.alpine-meta.outputs.tags }}
